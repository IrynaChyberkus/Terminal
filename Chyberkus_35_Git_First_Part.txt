GIT Homework 1

JSON
 4. Создать внешний репозиторий c названием JSON. - На веб ресурсе https://github.com/IrynaChyberkus?tab=repositories создать новый публичный репозиторий с именем JSON (латинский) с файлом README в нем
 5. Клонировать репозиторий JSON на локальный компьютер. - Зайти в него, выбрать <> Code далее HTTPS далее скопировать ссылку https://github.com/IrynaChyberkus/JSON.git Затем в Git Bash зайти в папку git_intro и из нее выполнить git clone https://github.com/IrynaChyberkus/JSON.git
 6. Внутри локального JSON создать файл “new.json”. - touch new.json
 7. Добавить файл под гит. - git add .
 8. Закоммитить файл. - git commit -m "newjsoncreated"
 9. Отправить файл на внешний GitHub репозиторий. - git push
 10. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON. - vim new.json далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 12. Создать файл preferences.json - touch preferences.json
 13. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON. - vim preferences.json далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 14. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON - touch skills.json затем vim skills.json далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 15. Отправить сразу 2 файла на внешний репозиторий. -  git add . && git commit -m "pref_and_skills" затем git push
 16. На веб интерфейсе создать файл bug_report.json. - на ресурсе https://github.com/IrynaChyberkus/JSON/tree/main выполнить последовательность действий Add file - Create new file - назвать bug_report.json - можно заполнить текстовое поле Description - Commit changes 
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по созданию файла)
 18. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON. - Double click на имени файла затем в drop down c иконкой в виде карандаша выбрать Edit in place Отредактировать файл и нажать Commit changes
 19. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по модифицированию файла)
 20. Синхронизировать внешний и локальный репозиторий JSON - git pull

XML
 21. Создать внешний репозиторий c названием XML. - На веб ресурсе https://github.com/IrynaChyberkus?tab=repositories создать новый публичный репозиторий с именем XML (латинский) с файлом README в нем
 22. Клонировать репозиторий XML на локальный компьютер. - Зайти в него, выбрать <> Code далее HTTPS далее скопировать ссылку https://github.com/IrynaChyberkus/XML.git Затем в Git Bash зайти в папку git_intro и из нее выполнить git clone https://github.com/IrynaChyberkus/XML.git
 23. Внутри локального XML создать файл “new.xml”. - touch new.xml
 24. Добавить файл под гит.- git add .
 25. Закоммитить файл. - git commit -m "newxmlcreated"
 26. Отправить файл на внешний GitHub репозиторий. - git push
 27. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML.  - vim new.xml далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 28. Отправить изменения на внешний репозиторий. - git add . && git commit -m "newxmledition" затем git push
 29. Создать файл preferences.xml - touch preferences.xml
 30. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML. - vim preferences.xml далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 31. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML- touch skills.xml затем vim skills.xml далее клавишу I (Внести заправшиваемую информацию) далее клавишу Esc затем клавиши :wq
 32. Сделать коммит в одну строку.  - git add . && git commit -m "pref_and_skills"
 33. Отправить сразу 2 файла на внешний репозиторий. - git push
 34. На веб интерфейсе создать файл bug_report.xml. - на ресурсе https://github.com/IrynaChyberkus/XML/tree/main выполнить последовательность действий Add file - Create new file - назвать bug_report.xml - можно заполнить текстовое поле Description - Commit changes 
 35. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по созданию файла)
 36. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML. - Double click на имени файла затем в drop down c иконкой в виде карандаша выбрать Edit in place Отредактировать файл и нажать Commit changes
 37. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по модифицированию файла)
 38. Синхронизировать внешний и локальный репозиторий XML - git pull

TXT
 1. Создать внешний репозиторий c названием TXT. - На веб ресурсе https://github.com/IrynaChyberkus?tab=repositories создать новый публичный репозиторий с именем TXT (латинский) с файлом README в нем
 2. Клонировать репозиторий TXT на локальный компьютер. - Зайти в него, выбрать <> Code далее HTTPS далее скопировать ссылку https://github.com/IrynaChyberkus/TXT.git Затем в Git Bash зайти в папку git_intro и из нее выполнить git clone https://github.com/IrynaChyberkus/TXT.git
 3. Внутри локального TXT создать файл “new.txt”. -  touch new.txt
 4. Добавить файл под гит. - git add .
 5. Закоммитить файл. - git commit -m 'newtxtcreated'
 6. Отправить файл на внешний GitHub репозиторий. - git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. - cat >> new.txt можно cat > new.txt так как файл пока еще пустой и ничего не затрется в нем (Внести заправшиваемую информацию)
 8. Отправить изменения на внешний репозиторий. - git commit -a -m 'personalinfo' затем git push
 9. Создать файл preferences.txt - touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT. - cat > preferences.txt (Внести заправшиваемую информацию)
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT - touch skills.txt затем cat > skills.txt (добавить в него информацию)
 12. Сделать коммит в одну строку. - git add . && git commit -m "pref_and_skills"
 13. Отправить сразу 2 файла на внешний репозиторий. - git push
 14. На веб интерфейсе создать файл bug_report.txt. - на ресурсе https://github.com/IrynaChyberkus/TXT/tree/main выполнить последовательность действий Add file - Create new file - назвать bug_report.txt - можно заполнить текстовое поле Description - Commit changes 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по созданию файла)
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT. - Double click на имени файла затем в drop down c иконкой в виде карандаша выбрать Edit in place Отредактировать файл и нажать Commit changes
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе. - Commit changes (выполняется в цепочке действий по модифицированию файла)
 18. Синхронизировать внешний и локальный репозиторий TXT - git pull